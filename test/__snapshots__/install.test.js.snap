// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test install script Should include mkdir command 1`] = `
"
Commands to run inside server:

mkdir -p /root/.exoframe && touch /root/.exoframe/server.config.yml
echo \\"letsencrypt: true\\" >> /root/.exoframe/server.config.yml
echo \\"letsencryptEmail: EMAIL@GMAIL.COM\\" >> /root/.exoframe/server.config.yml


docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /root/.exoframe:/root/.exoframe -v /root/.ssh/authorized_keys:/root/.ssh/authorized_keys:ro -e EXO_PRIVATE_KEY=PASSWORD --label traefik.enable=true --label traefik.http.routers.exoframe-server.rule=Host(\`exoframe.EXAMPLE.COM\`) --label traefik.http.routers.exoframe-server-web.rule=Host(\`exoframe.EXAMPLE.COM\`) --label traefik.http.routers.exoframe-server.tls.certresolver=exoframeChallenge --label traefik.http.middlewares.exoframe-server-redirect.redirectscheme.scheme=https --label traefik.http.routers.exoframe-server-web.entrypoints=web --label traefik.http.routers.exoframe-server-web.middlewares=exoframe-server-redirect@docker --label traefik.http.routers.exoframe-server.entrypoints=websecure --label entryPoints.web.address=:80 --label entryPoints.websecure.address=:443 --restart always --name exoframe-server exoframe/server
"
`;

exports[`Test install script Should print help 1`] = `
"
Usage:
  -D, --dry-run     Dry run. Print command instead of executing it.
  -e, --email       Enter email to enable SSL support.
  -d, --domain      * Enter exoframe-server domain.
  -p, --password    * Enter your private key used for JWT encryption.

"
`;

exports[`Test install script Should print only docker command 1`] = `
"
Commands to run inside server:

docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /root/.exoframe:/root/.exoframe -v /root/.ssh/authorized_keys:/root/.ssh/authorized_keys:ro -e EXO_PRIVATE_KEY=PASSWORD --label traefik.enable=true --label traefik.http.routers.exoframe-server.rule=Host(\`exoframe.EXAMPLE.COM\`) --restart always --name exoframe-server exoframe/server
"
`;
